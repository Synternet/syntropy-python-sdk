# coding: utf-8

"""
    syntropy-controller

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class TsoaPartialPairLatencyTestObject_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "user_id": "float",
        "app_id": "float",
        "server_vpn_id": "float",
        "sr_policy_fw_route": "list[float]",
        "sr_policy_bw_route": "list[float]",
        "pair_latency_test_name": "str",
        "pair_latency_test_icmp_sdn": "float",
        "pair_latency_test_icmp_public": "float",
        "pair_latency_test_jitter_sdn": "float",
        "pair_latency_test_jitter_public": "float",
        "pair_latency_test_src_ipv4": "str",
        "pair_latency_test_src_location": "str",
        "pair_latency_test_src_host": "str",
        "pair_latency_test_dst_ipv4": "str",
        "pair_latency_test_dst_location": "str",
    }

    attribute_map = {
        "user_id": "user_id",
        "app_id": "app_id",
        "server_vpn_id": "server_vpn_id",
        "sr_policy_fw_route": "sr_policy_fw_route",
        "sr_policy_bw_route": "sr_policy_bw_route",
        "pair_latency_test_name": "pair_latency_test_name",
        "pair_latency_test_icmp_sdn": "pair_latency_test_icmp_sdn",
        "pair_latency_test_icmp_public": "pair_latency_test_icmp_public",
        "pair_latency_test_jitter_sdn": "pair_latency_test_jitter_sdn",
        "pair_latency_test_jitter_public": "pair_latency_test_jitter_public",
        "pair_latency_test_src_ipv4": "pair_latency_test_src_ipv4",
        "pair_latency_test_src_location": "pair_latency_test_src_location",
        "pair_latency_test_src_host": "pair_latency_test_src_host",
        "pair_latency_test_dst_ipv4": "pair_latency_test_dst_ipv4",
        "pair_latency_test_dst_location": "pair_latency_test_dst_location",
    }

    def __init__(
        self,
        user_id=None,
        app_id=None,
        server_vpn_id=None,
        sr_policy_fw_route=None,
        sr_policy_bw_route=None,
        pair_latency_test_name=None,
        pair_latency_test_icmp_sdn=None,
        pair_latency_test_icmp_public=None,
        pair_latency_test_jitter_sdn=None,
        pair_latency_test_jitter_public=None,
        pair_latency_test_src_ipv4=None,
        pair_latency_test_src_location=None,
        pair_latency_test_src_host=None,
        pair_latency_test_dst_ipv4=None,
        pair_latency_test_dst_location=None,
    ):  # noqa: E501
        """TsoaPartialPairLatencyTestObject_ - a model defined in Swagger"""  # noqa: E501
        self._user_id = None
        self._app_id = None
        self._server_vpn_id = None
        self._sr_policy_fw_route = None
        self._sr_policy_bw_route = None
        self._pair_latency_test_name = None
        self._pair_latency_test_icmp_sdn = None
        self._pair_latency_test_icmp_public = None
        self._pair_latency_test_jitter_sdn = None
        self._pair_latency_test_jitter_public = None
        self._pair_latency_test_src_ipv4 = None
        self._pair_latency_test_src_location = None
        self._pair_latency_test_src_host = None
        self._pair_latency_test_dst_ipv4 = None
        self._pair_latency_test_dst_location = None
        self.discriminator = None
        if user_id is not None:
            self.user_id = user_id
        if app_id is not None:
            self.app_id = app_id
        if server_vpn_id is not None:
            self.server_vpn_id = server_vpn_id
        if sr_policy_fw_route is not None:
            self.sr_policy_fw_route = sr_policy_fw_route
        if sr_policy_bw_route is not None:
            self.sr_policy_bw_route = sr_policy_bw_route
        if pair_latency_test_name is not None:
            self.pair_latency_test_name = pair_latency_test_name
        if pair_latency_test_icmp_sdn is not None:
            self.pair_latency_test_icmp_sdn = pair_latency_test_icmp_sdn
        if pair_latency_test_icmp_public is not None:
            self.pair_latency_test_icmp_public = pair_latency_test_icmp_public
        if pair_latency_test_jitter_sdn is not None:
            self.pair_latency_test_jitter_sdn = pair_latency_test_jitter_sdn
        if pair_latency_test_jitter_public is not None:
            self.pair_latency_test_jitter_public = pair_latency_test_jitter_public
        if pair_latency_test_src_ipv4 is not None:
            self.pair_latency_test_src_ipv4 = pair_latency_test_src_ipv4
        if pair_latency_test_src_location is not None:
            self.pair_latency_test_src_location = pair_latency_test_src_location
        if pair_latency_test_src_host is not None:
            self.pair_latency_test_src_host = pair_latency_test_src_host
        if pair_latency_test_dst_ipv4 is not None:
            self.pair_latency_test_dst_ipv4 = pair_latency_test_dst_ipv4
        if pair_latency_test_dst_location is not None:
            self.pair_latency_test_dst_location = pair_latency_test_dst_location

    @property
    def user_id(self):
        """Gets the user_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The user_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this TsoaPartialPairLatencyTestObject_.


        :param user_id: The user_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._user_id = user_id

    @property
    def app_id(self):
        """Gets the app_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The app_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this TsoaPartialPairLatencyTestObject_.


        :param app_id: The app_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._app_id = app_id

    @property
    def server_vpn_id(self):
        """Gets the server_vpn_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The server_vpn_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._server_vpn_id

    @server_vpn_id.setter
    def server_vpn_id(self, server_vpn_id):
        """Sets the server_vpn_id of this TsoaPartialPairLatencyTestObject_.


        :param server_vpn_id: The server_vpn_id of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._server_vpn_id = server_vpn_id

    @property
    def sr_policy_fw_route(self):
        """Gets the sr_policy_fw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The sr_policy_fw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: list[float]
        """
        return self._sr_policy_fw_route

    @sr_policy_fw_route.setter
    def sr_policy_fw_route(self, sr_policy_fw_route):
        """Sets the sr_policy_fw_route of this TsoaPartialPairLatencyTestObject_.


        :param sr_policy_fw_route: The sr_policy_fw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: list[float]
        """

        self._sr_policy_fw_route = sr_policy_fw_route

    @property
    def sr_policy_bw_route(self):
        """Gets the sr_policy_bw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The sr_policy_bw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: list[float]
        """
        return self._sr_policy_bw_route

    @sr_policy_bw_route.setter
    def sr_policy_bw_route(self, sr_policy_bw_route):
        """Sets the sr_policy_bw_route of this TsoaPartialPairLatencyTestObject_.


        :param sr_policy_bw_route: The sr_policy_bw_route of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: list[float]
        """

        self._sr_policy_bw_route = sr_policy_bw_route

    @property
    def pair_latency_test_name(self):
        """Gets the pair_latency_test_name of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_name of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_name

    @pair_latency_test_name.setter
    def pair_latency_test_name(self, pair_latency_test_name):
        """Sets the pair_latency_test_name of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_name: The pair_latency_test_name of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_name = pair_latency_test_name

    @property
    def pair_latency_test_icmp_sdn(self):
        """Gets the pair_latency_test_icmp_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_icmp_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._pair_latency_test_icmp_sdn

    @pair_latency_test_icmp_sdn.setter
    def pair_latency_test_icmp_sdn(self, pair_latency_test_icmp_sdn):
        """Sets the pair_latency_test_icmp_sdn of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_icmp_sdn: The pair_latency_test_icmp_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._pair_latency_test_icmp_sdn = pair_latency_test_icmp_sdn

    @property
    def pair_latency_test_icmp_public(self):
        """Gets the pair_latency_test_icmp_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_icmp_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._pair_latency_test_icmp_public

    @pair_latency_test_icmp_public.setter
    def pair_latency_test_icmp_public(self, pair_latency_test_icmp_public):
        """Sets the pair_latency_test_icmp_public of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_icmp_public: The pair_latency_test_icmp_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._pair_latency_test_icmp_public = pair_latency_test_icmp_public

    @property
    def pair_latency_test_jitter_sdn(self):
        """Gets the pair_latency_test_jitter_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_jitter_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._pair_latency_test_jitter_sdn

    @pair_latency_test_jitter_sdn.setter
    def pair_latency_test_jitter_sdn(self, pair_latency_test_jitter_sdn):
        """Sets the pair_latency_test_jitter_sdn of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_jitter_sdn: The pair_latency_test_jitter_sdn of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._pair_latency_test_jitter_sdn = pair_latency_test_jitter_sdn

    @property
    def pair_latency_test_jitter_public(self):
        """Gets the pair_latency_test_jitter_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_jitter_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: float
        """
        return self._pair_latency_test_jitter_public

    @pair_latency_test_jitter_public.setter
    def pair_latency_test_jitter_public(self, pair_latency_test_jitter_public):
        """Sets the pair_latency_test_jitter_public of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_jitter_public: The pair_latency_test_jitter_public of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: float
        """

        self._pair_latency_test_jitter_public = pair_latency_test_jitter_public

    @property
    def pair_latency_test_src_ipv4(self):
        """Gets the pair_latency_test_src_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_src_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_src_ipv4

    @pair_latency_test_src_ipv4.setter
    def pair_latency_test_src_ipv4(self, pair_latency_test_src_ipv4):
        """Sets the pair_latency_test_src_ipv4 of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_src_ipv4: The pair_latency_test_src_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_src_ipv4 = pair_latency_test_src_ipv4

    @property
    def pair_latency_test_src_location(self):
        """Gets the pair_latency_test_src_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_src_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_src_location

    @pair_latency_test_src_location.setter
    def pair_latency_test_src_location(self, pair_latency_test_src_location):
        """Sets the pair_latency_test_src_location of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_src_location: The pair_latency_test_src_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_src_location = pair_latency_test_src_location

    @property
    def pair_latency_test_src_host(self):
        """Gets the pair_latency_test_src_host of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_src_host of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_src_host

    @pair_latency_test_src_host.setter
    def pair_latency_test_src_host(self, pair_latency_test_src_host):
        """Sets the pair_latency_test_src_host of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_src_host: The pair_latency_test_src_host of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_src_host = pair_latency_test_src_host

    @property
    def pair_latency_test_dst_ipv4(self):
        """Gets the pair_latency_test_dst_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_dst_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_dst_ipv4

    @pair_latency_test_dst_ipv4.setter
    def pair_latency_test_dst_ipv4(self, pair_latency_test_dst_ipv4):
        """Sets the pair_latency_test_dst_ipv4 of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_dst_ipv4: The pair_latency_test_dst_ipv4 of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_dst_ipv4 = pair_latency_test_dst_ipv4

    @property
    def pair_latency_test_dst_location(self):
        """Gets the pair_latency_test_dst_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501


        :return: The pair_latency_test_dst_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :rtype: str
        """
        return self._pair_latency_test_dst_location

    @pair_latency_test_dst_location.setter
    def pair_latency_test_dst_location(self, pair_latency_test_dst_location):
        """Sets the pair_latency_test_dst_location of this TsoaPartialPairLatencyTestObject_.


        :param pair_latency_test_dst_location: The pair_latency_test_dst_location of this TsoaPartialPairLatencyTestObject_.  # noqa: E501
        :type: str
        """

        self._pair_latency_test_dst_location = pair_latency_test_dst_location

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(TsoaPartialPairLatencyTestObject_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TsoaPartialPairLatencyTestObject_):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
