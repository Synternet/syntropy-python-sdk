# coding: utf-8

"""
    syntropy-controller

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class PlatformAgentsBodyObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "timeout": "str",
        "size": "float",
        "_from": "float",
        "sort": "list[Object]",
        "query": "Object",
    }

    attribute_map = {
        "timeout": "timeout",
        "size": "size",
        "_from": "from",
        "sort": "sort",
        "query": "query",
    }

    def __init__(
        self, timeout=None, size=None, _from=None, sort=None, query=None
    ):  # noqa: E501
        """PlatformAgentsBodyObject - a model defined in Swagger"""  # noqa: E501
        self._timeout = None
        self._size = None
        self.__from = None
        self._sort = None
        self._query = None
        self.discriminator = None
        if timeout is not None:
            self.timeout = timeout
        if size is not None:
            self.size = size
        if _from is not None:
            self._from = _from
        if sort is not None:
            self.sort = sort
        if query is not None:
            self.query = query

    @property
    def timeout(self):
        """Gets the timeout of this PlatformAgentsBodyObject.  # noqa: E501


        :return: The timeout of this PlatformAgentsBodyObject.  # noqa: E501
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this PlatformAgentsBodyObject.


        :param timeout: The timeout of this PlatformAgentsBodyObject.  # noqa: E501
        :type: str
        """

        self._timeout = timeout

    @property
    def size(self):
        """Gets the size of this PlatformAgentsBodyObject.  # noqa: E501


        :return: The size of this PlatformAgentsBodyObject.  # noqa: E501
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PlatformAgentsBodyObject.


        :param size: The size of this PlatformAgentsBodyObject.  # noqa: E501
        :type: float
        """

        self._size = size

    @property
    def _from(self):
        """Gets the _from of this PlatformAgentsBodyObject.  # noqa: E501


        :return: The _from of this PlatformAgentsBodyObject.  # noqa: E501
        :rtype: float
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this PlatformAgentsBodyObject.


        :param _from: The _from of this PlatformAgentsBodyObject.  # noqa: E501
        :type: float
        """

        self.__from = _from

    @property
    def sort(self):
        """Gets the sort of this PlatformAgentsBodyObject.  # noqa: E501


        :return: The sort of this PlatformAgentsBodyObject.  # noqa: E501
        :rtype: list[Object]
        """
        return self._sort

    @sort.setter
    def sort(self, sort):
        """Sets the sort of this PlatformAgentsBodyObject.


        :param sort: The sort of this PlatformAgentsBodyObject.  # noqa: E501
        :type: list[Object]
        """

        self._sort = sort

    @property
    def query(self):
        """Gets the query of this PlatformAgentsBodyObject.  # noqa: E501


        :return: The query of this PlatformAgentsBodyObject.  # noqa: E501
        :rtype: Object
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this PlatformAgentsBodyObject.


        :param query: The query of this PlatformAgentsBodyObject.  # noqa: E501
        :type: Object
        """

        self._query = query

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(PlatformAgentsBodyObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PlatformAgentsBodyObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
