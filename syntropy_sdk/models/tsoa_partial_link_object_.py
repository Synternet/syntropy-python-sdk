# coding: utf-8

"""
    syntropy-controller

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class TsoaPartialLinkObject_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "lang_id": "float",
        "link_weight": "float",
        "link_title": "str",
        "link_url": "str",
        "link_type": "ContextType",
        "link_img_url": "str",
        "link_visibility": "VisibilityType",
    }

    attribute_map = {
        "lang_id": "lang_id",
        "link_weight": "link_weight",
        "link_title": "link_title",
        "link_url": "link_url",
        "link_type": "link_type",
        "link_img_url": "link_img_url",
        "link_visibility": "link_visibility",
    }

    def __init__(
        self,
        lang_id=None,
        link_weight=None,
        link_title=None,
        link_url=None,
        link_type=None,
        link_img_url=None,
        link_visibility=None,
    ):  # noqa: E501
        """TsoaPartialLinkObject_ - a model defined in Swagger"""  # noqa: E501
        self._lang_id = None
        self._link_weight = None
        self._link_title = None
        self._link_url = None
        self._link_type = None
        self._link_img_url = None
        self._link_visibility = None
        self.discriminator = None
        if lang_id is not None:
            self.lang_id = lang_id
        if link_weight is not None:
            self.link_weight = link_weight
        if link_title is not None:
            self.link_title = link_title
        if link_url is not None:
            self.link_url = link_url
        if link_type is not None:
            self.link_type = link_type
        if link_img_url is not None:
            self.link_img_url = link_img_url
        if link_visibility is not None:
            self.link_visibility = link_visibility

    @property
    def lang_id(self):
        """Gets the lang_id of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The lang_id of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: float
        """
        return self._lang_id

    @lang_id.setter
    def lang_id(self, lang_id):
        """Sets the lang_id of this TsoaPartialLinkObject_.


        :param lang_id: The lang_id of this TsoaPartialLinkObject_.  # noqa: E501
        :type: float
        """

        self._lang_id = lang_id

    @property
    def link_weight(self):
        """Gets the link_weight of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_weight of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: float
        """
        return self._link_weight

    @link_weight.setter
    def link_weight(self, link_weight):
        """Sets the link_weight of this TsoaPartialLinkObject_.


        :param link_weight: The link_weight of this TsoaPartialLinkObject_.  # noqa: E501
        :type: float
        """

        self._link_weight = link_weight

    @property
    def link_title(self):
        """Gets the link_title of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_title of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: str
        """
        return self._link_title

    @link_title.setter
    def link_title(self, link_title):
        """Sets the link_title of this TsoaPartialLinkObject_.


        :param link_title: The link_title of this TsoaPartialLinkObject_.  # noqa: E501
        :type: str
        """

        self._link_title = link_title

    @property
    def link_url(self):
        """Gets the link_url of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_url of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: str
        """
        return self._link_url

    @link_url.setter
    def link_url(self, link_url):
        """Sets the link_url of this TsoaPartialLinkObject_.


        :param link_url: The link_url of this TsoaPartialLinkObject_.  # noqa: E501
        :type: str
        """

        self._link_url = link_url

    @property
    def link_type(self):
        """Gets the link_type of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_type of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: ContextType
        """
        return self._link_type

    @link_type.setter
    def link_type(self, link_type):
        """Sets the link_type of this TsoaPartialLinkObject_.


        :param link_type: The link_type of this TsoaPartialLinkObject_.  # noqa: E501
        :type: ContextType
        """

        self._link_type = link_type

    @property
    def link_img_url(self):
        """Gets the link_img_url of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_img_url of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: str
        """
        return self._link_img_url

    @link_img_url.setter
    def link_img_url(self, link_img_url):
        """Sets the link_img_url of this TsoaPartialLinkObject_.


        :param link_img_url: The link_img_url of this TsoaPartialLinkObject_.  # noqa: E501
        :type: str
        """

        self._link_img_url = link_img_url

    @property
    def link_visibility(self):
        """Gets the link_visibility of this TsoaPartialLinkObject_.  # noqa: E501


        :return: The link_visibility of this TsoaPartialLinkObject_.  # noqa: E501
        :rtype: VisibilityType
        """
        return self._link_visibility

    @link_visibility.setter
    def link_visibility(self, link_visibility):
        """Sets the link_visibility of this TsoaPartialLinkObject_.


        :param link_visibility: The link_visibility of this TsoaPartialLinkObject_.  # noqa: E501
        :type: VisibilityType
        """

        self._link_visibility = link_visibility

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(TsoaPartialLinkObject_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TsoaPartialLinkObject_):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
