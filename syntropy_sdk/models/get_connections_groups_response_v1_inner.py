# coding: utf-8

"""
    syntropy-controller

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class GetConnectionsGroupsResponseV1Inner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "agent_connection_subnets_enabled_count": "float",
        "agent_connection_group_updated_at": "datetime",
        "agent_connection_group_status_reason": "str",
        "agent_connection_group_status": "AgentConnectionStatus",
        "agent_connection_group_sdn_enabled": "bool",
        "agent_connection_group_id": "float",
        "agent_connection_group_created_by": "AgentConnectionGroupCreatedBy",
        "agent_2": "GetConnectionsGroupsAgentResponseV1",
        "agent_1": "GetConnectionsGroupsAgentResponseV1",
    }

    attribute_map = {
        "agent_connection_subnets_enabled_count": "agent_connection_subnets_enabled_count",
        "agent_connection_group_updated_at": "agent_connection_group_updated_at",
        "agent_connection_group_status_reason": "agent_connection_group_status_reason",
        "agent_connection_group_status": "agent_connection_group_status",
        "agent_connection_group_sdn_enabled": "agent_connection_group_sdn_enabled",
        "agent_connection_group_id": "agent_connection_group_id",
        "agent_connection_group_created_by": "agent_connection_group_created_by",
        "agent_2": "agent_2",
        "agent_1": "agent_1",
    }

    def __init__(
        self,
        agent_connection_subnets_enabled_count=None,
        agent_connection_group_updated_at=None,
        agent_connection_group_status_reason=None,
        agent_connection_group_status=None,
        agent_connection_group_sdn_enabled=None,
        agent_connection_group_id=None,
        agent_connection_group_created_by=None,
        agent_2=None,
        agent_1=None,
    ):  # noqa: E501
        """GetConnectionsGroupsResponseV1Inner - a model defined in Swagger"""  # noqa: E501
        self._agent_connection_subnets_enabled_count = None
        self._agent_connection_group_updated_at = None
        self._agent_connection_group_status_reason = None
        self._agent_connection_group_status = None
        self._agent_connection_group_sdn_enabled = None
        self._agent_connection_group_id = None
        self._agent_connection_group_created_by = None
        self._agent_2 = None
        self._agent_1 = None
        self.discriminator = None
        self.agent_connection_subnets_enabled_count = (
            agent_connection_subnets_enabled_count
        )
        self.agent_connection_group_updated_at = agent_connection_group_updated_at
        if agent_connection_group_status_reason is not None:
            self.agent_connection_group_status_reason = (
                agent_connection_group_status_reason
            )
        self.agent_connection_group_status = agent_connection_group_status
        self.agent_connection_group_sdn_enabled = agent_connection_group_sdn_enabled
        self.agent_connection_group_id = agent_connection_group_id
        self.agent_connection_group_created_by = agent_connection_group_created_by
        self.agent_2 = agent_2
        self.agent_1 = agent_1

    @property
    def agent_connection_subnets_enabled_count(self):
        """Gets the agent_connection_subnets_enabled_count of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_subnets_enabled_count of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: float
        """
        return self._agent_connection_subnets_enabled_count

    @agent_connection_subnets_enabled_count.setter
    def agent_connection_subnets_enabled_count(
        self, agent_connection_subnets_enabled_count
    ):
        """Sets the agent_connection_subnets_enabled_count of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_subnets_enabled_count: The agent_connection_subnets_enabled_count of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: float
        """
        if agent_connection_subnets_enabled_count is None:
            raise ValueError(
                "Invalid value for `agent_connection_subnets_enabled_count`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_subnets_enabled_count = (
            agent_connection_subnets_enabled_count
        )

    @property
    def agent_connection_group_updated_at(self):
        """Gets the agent_connection_group_updated_at of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_updated_at of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: datetime
        """
        return self._agent_connection_group_updated_at

    @agent_connection_group_updated_at.setter
    def agent_connection_group_updated_at(self, agent_connection_group_updated_at):
        """Sets the agent_connection_group_updated_at of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_updated_at: The agent_connection_group_updated_at of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: datetime
        """
        if agent_connection_group_updated_at is None:
            raise ValueError(
                "Invalid value for `agent_connection_group_updated_at`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_group_updated_at = agent_connection_group_updated_at

    @property
    def agent_connection_group_status_reason(self):
        """Gets the agent_connection_group_status_reason of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_status_reason of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: str
        """
        return self._agent_connection_group_status_reason

    @agent_connection_group_status_reason.setter
    def agent_connection_group_status_reason(
        self, agent_connection_group_status_reason
    ):
        """Sets the agent_connection_group_status_reason of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_status_reason: The agent_connection_group_status_reason of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: str
        """

        self._agent_connection_group_status_reason = (
            agent_connection_group_status_reason
        )

    @property
    def agent_connection_group_status(self):
        """Gets the agent_connection_group_status of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_status of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: AgentConnectionStatus
        """
        return self._agent_connection_group_status

    @agent_connection_group_status.setter
    def agent_connection_group_status(self, agent_connection_group_status):
        """Sets the agent_connection_group_status of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_status: The agent_connection_group_status of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: AgentConnectionStatus
        """
        if agent_connection_group_status is None:
            raise ValueError(
                "Invalid value for `agent_connection_group_status`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_group_status = agent_connection_group_status

    @property
    def agent_connection_group_sdn_enabled(self):
        """Gets the agent_connection_group_sdn_enabled of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_sdn_enabled of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: bool
        """
        return self._agent_connection_group_sdn_enabled

    @agent_connection_group_sdn_enabled.setter
    def agent_connection_group_sdn_enabled(self, agent_connection_group_sdn_enabled):
        """Sets the agent_connection_group_sdn_enabled of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_sdn_enabled: The agent_connection_group_sdn_enabled of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: bool
        """
        if agent_connection_group_sdn_enabled is None:
            raise ValueError(
                "Invalid value for `agent_connection_group_sdn_enabled`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_group_sdn_enabled = agent_connection_group_sdn_enabled

    @property
    def agent_connection_group_id(self):
        """Gets the agent_connection_group_id of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_id of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: float
        """
        return self._agent_connection_group_id

    @agent_connection_group_id.setter
    def agent_connection_group_id(self, agent_connection_group_id):
        """Sets the agent_connection_group_id of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_id: The agent_connection_group_id of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: float
        """
        if agent_connection_group_id is None:
            raise ValueError(
                "Invalid value for `agent_connection_group_id`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_group_id = agent_connection_group_id

    @property
    def agent_connection_group_created_by(self):
        """Gets the agent_connection_group_created_by of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_connection_group_created_by of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: AgentConnectionGroupCreatedBy
        """
        return self._agent_connection_group_created_by

    @agent_connection_group_created_by.setter
    def agent_connection_group_created_by(self, agent_connection_group_created_by):
        """Sets the agent_connection_group_created_by of this GetConnectionsGroupsResponseV1Inner.


        :param agent_connection_group_created_by: The agent_connection_group_created_by of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: AgentConnectionGroupCreatedBy
        """
        if agent_connection_group_created_by is None:
            raise ValueError(
                "Invalid value for `agent_connection_group_created_by`, must not be `None`"
            )  # noqa: E501

        self._agent_connection_group_created_by = agent_connection_group_created_by

    @property
    def agent_2(self):
        """Gets the agent_2 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_2 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: GetConnectionsGroupsAgentResponseV1
        """
        return self._agent_2

    @agent_2.setter
    def agent_2(self, agent_2):
        """Sets the agent_2 of this GetConnectionsGroupsResponseV1Inner.


        :param agent_2: The agent_2 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: GetConnectionsGroupsAgentResponseV1
        """
        if agent_2 is None:
            raise ValueError(
                "Invalid value for `agent_2`, must not be `None`"
            )  # noqa: E501

        self._agent_2 = agent_2

    @property
    def agent_1(self):
        """Gets the agent_1 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501


        :return: The agent_1 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :rtype: GetConnectionsGroupsAgentResponseV1
        """
        return self._agent_1

    @agent_1.setter
    def agent_1(self, agent_1):
        """Sets the agent_1 of this GetConnectionsGroupsResponseV1Inner.


        :param agent_1: The agent_1 of this GetConnectionsGroupsResponseV1Inner.  # noqa: E501
        :type: GetConnectionsGroupsAgentResponseV1
        """
        if agent_1 is None:
            raise ValueError(
                "Invalid value for `agent_1`, must not be `None`"
            )  # noqa: E501

        self._agent_1 = agent_1

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(GetConnectionsGroupsResponseV1Inner, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetConnectionsGroupsResponseV1Inner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
