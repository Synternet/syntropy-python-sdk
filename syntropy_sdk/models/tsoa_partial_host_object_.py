# coding: utf-8

"""
    syntropy-controller

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class TsoaPartialHostObject_(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "host_name": "str",
        "user_id": "float",
        "host_dest_ipv4_cidr": "str",
        "host_group_id": "float",
        "host_ookla_speedtest_server_id": "float",
        "host_domain": "str",
        "host_location": "str",
    }

    attribute_map = {
        "host_name": "host_name",
        "user_id": "user_id",
        "host_dest_ipv4_cidr": "host_dest_ipv4_cidr",
        "host_group_id": "host_group_id",
        "host_ookla_speedtest_server_id": "host_ookla_speedtest_server_id",
        "host_domain": "host_domain",
        "host_location": "host_location",
    }

    def __init__(
        self,
        host_name=None,
        user_id=None,
        host_dest_ipv4_cidr=None,
        host_group_id=None,
        host_ookla_speedtest_server_id=None,
        host_domain=None,
        host_location=None,
    ):  # noqa: E501
        """TsoaPartialHostObject_ - a model defined in Swagger"""  # noqa: E501
        self._host_name = None
        self._user_id = None
        self._host_dest_ipv4_cidr = None
        self._host_group_id = None
        self._host_ookla_speedtest_server_id = None
        self._host_domain = None
        self._host_location = None
        self.discriminator = None
        if host_name is not None:
            self.host_name = host_name
        if user_id is not None:
            self.user_id = user_id
        if host_dest_ipv4_cidr is not None:
            self.host_dest_ipv4_cidr = host_dest_ipv4_cidr
        if host_group_id is not None:
            self.host_group_id = host_group_id
        if host_ookla_speedtest_server_id is not None:
            self.host_ookla_speedtest_server_id = host_ookla_speedtest_server_id
        if host_domain is not None:
            self.host_domain = host_domain
        if host_location is not None:
            self.host_location = host_location

    @property
    def host_name(self):
        """Gets the host_name of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_name of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this TsoaPartialHostObject_.


        :param host_name: The host_name of this TsoaPartialHostObject_.  # noqa: E501
        :type: str
        """

        self._host_name = host_name

    @property
    def user_id(self):
        """Gets the user_id of this TsoaPartialHostObject_.  # noqa: E501


        :return: The user_id of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: float
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this TsoaPartialHostObject_.


        :param user_id: The user_id of this TsoaPartialHostObject_.  # noqa: E501
        :type: float
        """

        self._user_id = user_id

    @property
    def host_dest_ipv4_cidr(self):
        """Gets the host_dest_ipv4_cidr of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_dest_ipv4_cidr of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: str
        """
        return self._host_dest_ipv4_cidr

    @host_dest_ipv4_cidr.setter
    def host_dest_ipv4_cidr(self, host_dest_ipv4_cidr):
        """Sets the host_dest_ipv4_cidr of this TsoaPartialHostObject_.


        :param host_dest_ipv4_cidr: The host_dest_ipv4_cidr of this TsoaPartialHostObject_.  # noqa: E501
        :type: str
        """

        self._host_dest_ipv4_cidr = host_dest_ipv4_cidr

    @property
    def host_group_id(self):
        """Gets the host_group_id of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_group_id of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: float
        """
        return self._host_group_id

    @host_group_id.setter
    def host_group_id(self, host_group_id):
        """Sets the host_group_id of this TsoaPartialHostObject_.


        :param host_group_id: The host_group_id of this TsoaPartialHostObject_.  # noqa: E501
        :type: float
        """

        self._host_group_id = host_group_id

    @property
    def host_ookla_speedtest_server_id(self):
        """Gets the host_ookla_speedtest_server_id of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_ookla_speedtest_server_id of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: float
        """
        return self._host_ookla_speedtest_server_id

    @host_ookla_speedtest_server_id.setter
    def host_ookla_speedtest_server_id(self, host_ookla_speedtest_server_id):
        """Sets the host_ookla_speedtest_server_id of this TsoaPartialHostObject_.


        :param host_ookla_speedtest_server_id: The host_ookla_speedtest_server_id of this TsoaPartialHostObject_.  # noqa: E501
        :type: float
        """

        self._host_ookla_speedtest_server_id = host_ookla_speedtest_server_id

    @property
    def host_domain(self):
        """Gets the host_domain of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_domain of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: str
        """
        return self._host_domain

    @host_domain.setter
    def host_domain(self, host_domain):
        """Sets the host_domain of this TsoaPartialHostObject_.


        :param host_domain: The host_domain of this TsoaPartialHostObject_.  # noqa: E501
        :type: str
        """

        self._host_domain = host_domain

    @property
    def host_location(self):
        """Gets the host_location of this TsoaPartialHostObject_.  # noqa: E501


        :return: The host_location of this TsoaPartialHostObject_.  # noqa: E501
        :rtype: str
        """
        return self._host_location

    @host_location.setter
    def host_location(self, host_location):
        """Sets the host_location of this TsoaPartialHostObject_.


        :param host_location: The host_location of this TsoaPartialHostObject_.  # noqa: E501
        :type: str
        """

        self._host_location = host_location

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(TsoaPartialHostObject_, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TsoaPartialHostObject_):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
